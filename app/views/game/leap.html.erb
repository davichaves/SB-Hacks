<% provide(:title, "Make a Sign") %>

<h1>Make a Sign</h1><h2 class="text-center">Using LeapMotion</h3><hr/>

<p class=" lead text-right no-margin-bottom">Points: <strong><%= @current_user.points %></strong></p>

<div class="row">

	<div class="col-md-6 col-md-offset-3">
		<div class="text-center">
			<p>Please make the sign for letter </p>
			<h1><%= @sign.symbol.upcase %></h1>

			<input id="game_id" type="hidden" name="game[id]" value="<%=@sign.id %>"/>

			<a href="/play/leap"><input name="commit" value="Submit Answer" class="btn btn-primary"></a>

<br/><br/>
			<div><a href="/play"><input name="commit" value="Choose Another Level" class="btn btn-info"></a></div>
		</div>
	</div>
</div>
<hr/>

<h2>LeapMotion's Analysis</h2>

<strong>Detected Letter</strong>: <div id="output"></div>


<hr/>
Is this your <strong>first time playing?</strong> <%= link_to "Check out our tutorial", play_tutorial_path %>


<script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r67/three.js"></script>
<script src="https://js.leapmotion.com/leap-0.6.4.js"></script>
<script src="https://js.leapmotion.com/leap-plugins-0.1.6.1.js"></script>
<script src="https://js.leapmotion.com/leap.rigged-hand-0.1.4.min.js"></script>
<script type="text/javascript">

function concatData(id, data) {
	return id + ": " + data + "<br>";
}

function getFingerName(fingerType) {
	switch(fingerType) {
		case 0:
		return 'Thumb';
		break;

		case 1:
		return 'Index';
		break;

		case 2:
		return 'Middle';
		break;

		case 3:
		return 'Ring';
		break;

		case 4:
		return 'Pinky';
		break;
	}
}

function post(path, params, method) {
    method = method || "post"; // Set method to post by default if not specified.

    // The rest of this code assumes you are not using a library.
    // It can be made less wordy if you use one.
    var form = document.createElement("form");
    form.setAttribute("method", method);
    form.setAttribute("action", path);

    for(var key in params) {
      if(params.hasOwnProperty(key)) {
        var hiddenField = document.createElement("input");
        hiddenField.setAttribute("type", "hidden");
        hiddenField.setAttribute("name", key);
        hiddenField.setAttribute("value", params[key]);

        form.appendChild(hiddenField);
      }
    }

    document.body.appendChild(form);
    form.submit();
  }


  function concatJointPosition(id, position) {
   return id + ": " + position[0] + ", " + position[1] + ", " + position[2] + "<br>";
 }

 $(document).ready(function(){ 

   var output = document.getElementById('output');
   var frameString = "", handString = "", fingerString = "", letterString = "", angleString = "";
   var hand, finger;
   var xmlhttp  = new XMLHttpRequest();

    // Leap.loop uses browser's requestAnimationFrame
    var options = { enableGestures: true };
    
    // Main Leap Loop
    Leap.loop(options, function(frame) {

      // Showcase some new V2 features
      for (var i = 0, len = frame.hands.length; i < len; i++) {
      	hand = frame.hands[i];

      	var d1 = hand.indexFinger.proximal.direction(),
      	d2 = hand.middleFinger.proximal.direction();

      	var angle = Math.acos(Leap.vec3.dot(d1, d2));

      	var cross = Leap.vec3.create();
      	Leap.vec3.cross(cross, d1, d2);

      	var dir = Leap.vec3.dot(hand.palmNormal, cross);

      	if (dir < 0) {
      		angle *= -1;
      	}

      	angleString = (angle ).toPrecision(2) + ' rad / ';
      	angleString += (angle * 180 / Math.PI).toPrecision(2) + 'Â°';
      	angleString += '<br>'

      	var extended = [];

        // Helpers for thumb, pinky, etc.
        for (var j = 0, len2 = hand.fingers.length; j < len2; j++) {
        	finger = hand.fingers[j];
        	extended[j] = finger.extended;
        	fingerString += "<br>";
        }
        // for (var i = 0; i < extended.length; i++) {
        //   console.log("This is the value for finger " + i + ": " + extended[i]);
        // }
        if((extended[0] === extended[4] === false) && (extended[1] === extended[2] === extended[3] === true)) {
        	letterString = "W";
        } else if (extended[1] === extended[2] === extended[3] === false && extended[0] === extended[4] === true) {
        	letterString = "Y";
        } else if (extended[4] === extended[2] === extended[3] === false && extended[0] === extended[1] === true) {
        	letterString = "L";
        } else if (extended[1] === extended[2] === extended[3] === extended[0] === false && extended[4] === true) {
        	letterString = "I";
        } else if (extended[4] === extended[2] === extended[3] === extended[0] === false && extended[1] === true) {
        	letterString = "D";
        } else if (extended[1] === extended[2] === extended[3] === extended[0] === true && extended[4] === false) {
        	letterString = "B";
        } else if (extended[4] === extended[2] === extended[3] === true && extended[0] === extended[1] === false) {
        	letterString = "F";
        } else if (extended[0] === extended[4] === extended[3] === false && extended[1] === extended[2] === true) {
        	if ((angle * 180 / Math.PI)<0) {
        		letterString = "R";
        	} else if ((angle * 180 / Math.PI)>10) {
        		letterString = "V";
        	} else {
        		letterString = "U";
        	}
        } else {
        	letterString = "";
        }
        
        frameString = letterString;
        frameString += angleString;
      }

      output.innerHTML = frameString;

      if (letterString!="") {
        // params = {game: {id: <%= @sign.id%>, char: letterString}};
        // $('html').die();
        // console.log(params)
        // post("/play/leap", params)


        // xmlhttp.onreadystatechange=function()
        // {
        //   if (xmlhttp.status==201)
        //   {
        //     alert("You got the answer right!");
        //   } else if (xmlhttp.status==422)  {
        //     alert("You got the answer wrong!");
        //   }
        // }

        if (letterString.toLowerCase()==='<%=@sign.symbol%>') {
          alert("You got the answer right! +30 points");
        } else {
          alert("You got the answer wrong!");
        }

        xmlhttp.open("POST", "/play/leap", true); 
        xmlhttp.setRequestHeader("Content-type","application/x-www-form-urlencoded");
        header = "game[id]=<%=@sign.id%>&game[char]=" + letterString;
        console.log(header);
        xmlhttp.send(header);
        $('html').die()
        // console.log(header);
        // location.reload();

      }

    });
});

</script>

